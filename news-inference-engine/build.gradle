buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
        bmuschkoDockerVersion = '3.6.1'
    }
    repositories {
        maven { url 'http://repo.spring.io/libs-release' }
        maven { url 'http://repo.spring.io/libs-snapshot' }
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.bmuschko:gradle-docker-plugin:${bmuschkoDockerVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'com.bmuschko.docker-spring-boot-application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'me.bubbleinvestor'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    maven { url 'http://repo.spring.io/libs-release' }
    maven { url 'http://repo.spring.io/libs-snapshot' }
    mavenCentral()
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url 'http://repo.spring.io/plugins-release' }
}


ext {
    springCloudVersion = 'Finchley.SR1'
    kafkaVersion = '1.1.1'
    reactorVersion = '3.1.8.RELEASE'
    reactorKafkaVersion = '1.0.1.RELEASE'
}

dependencies {
    compile "io.projectreactor:reactor-core:$reactorVersion"
    compile "org.apache.kafka:kafka-clients:$kafkaVersion"
    compile "io.projectreactor.kafka:reactor-kafka:$reactorKafkaVersion"
    compile("org.springframework.boot:spring-boot-starter-web")
    compile('org.springframework.cloud:spring-cloud-stream')
    compile('org.springframework.cloud:spring-cloud-stream-binder-kafka')
    compile('org.springframework.cloud:spring-cloud-stream-reactive')
    compile('org.springframework.kafka:spring-kafka')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.cloud:spring-cloud-stream-test-support')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

docker {
    springBootApplication {
        baseImage = 'openjdk:8-alpine'
        ports = [8181, 8080]
        tag = "${project.group}/${bootJar.baseName}:latest"
    }
}